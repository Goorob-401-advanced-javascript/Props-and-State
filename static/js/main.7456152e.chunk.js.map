{"version":3,"sources":["components/header.js","components/form.js","components/results.js","app.js","index.js"],"names":["Header","React","Component","Form","props","changeHandler","event","name","target","value","setState","getData","preventDefault","fetch","state","url","method","headers","then","response","json","header","body","info","catch","err","error","message","onSubmit","this","type","className","onChange","Results","resultsFun","data","JSON","stringify","results","App","handleResult","result","Fragment","root","document","getElementById","ReactDOM","render"],"mappings":"uMASeA,E,iLALX,OACE,oCAAS,qCAAT,U,GAHeC,IAAMC,W,OC8EZC,E,YA5EX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KASVC,cAAgB,SAAAC,GACZ,IAAIC,EAAOD,EAAME,OAAOD,KACpBE,EAAQH,EAAME,OAAOC,MACzB,EAAKC,SAAL,eAAiBH,EAAOE,KAbT,EAgBnBE,QAAU,SAAAL,GACNA,EAAMM,iBACNC,MAAM,EAAKC,MAAMC,IAAK,CAClBC,OAAQ,EAAKF,MAAME,OACnBC,QAAS,CACL,eAAgB,sBAGnBC,MAAK,SAAAC,GACFA,EAAWA,EAASC,OACfF,MAAK,SAAAC,GACF,IAAIE,EAAS,CAAE,eAAgB,oBAC3BC,EAAOH,EACX,EAAKT,SAAS,CAAEW,SAAQC,SACxB,EAAKlB,MAAMmB,KAAK,CAAEF,SAAQC,YAE7BE,OAAM,SAAAC,GACH,IAAIH,EAAO,CAAEI,MAAOD,EAAIE,SACpBN,EAAS,GACb,EAAKX,SAAS,CAAEW,SAAQC,SACxB,EAAKlB,MAAMmB,KAAK,CAAEF,SAAQC,gBAlC1C,EAAKR,MAAQ,CACTC,IAAK,GACLC,OAAQ,MACRK,OAAQ,GACRC,KAAM,IANK,E,sEAyCf,OACI,8BACI,iCACI,0BAAMM,SAAUC,KAAKlB,SACjB,iCACI,2BAAOmB,KAAK,OAAOC,UAAU,MAAMxB,KAAK,MAAME,MAAOoB,KAAKf,MAAMC,IAAKiB,SAAUH,KAAKxB,gBACpF,yBAAK0B,UAAU,WACX,+BACI,2BAAOD,KAAK,QAAQvB,KAAK,SAASE,MAAM,QACxC,sCAEJ,+BACI,2BAAOqB,KAAK,QAAQvB,KAAK,SAASE,MAAM,SACxC,uCAEJ,+BACI,2BAAOqB,KAAK,QAAQvB,KAAK,SAASE,MAAM,QACxC,sCAEJ,+BACI,2BAAOqB,KAAK,QAAQvB,KAAK,SAASE,MAAM,WACxC,yCAEJ,mCAAQ,4BAAQqB,KAAK,UAAb,WAAR,c,GAjEb7B,IAAMC,WCsBV+B,E,2MApBXC,WAAY,SAACC,GAET,OADaC,KAAKC,UAAUF,EAAM,KAAO,O,wEAMzC,OACE,oCACE,8BACKN,KAAKK,WAAWL,KAAKzB,MAAMkC,e,GAZtBrC,IAAMC,WCqBbqC,E,YAlBX,WAAYnC,GAAO,IAAD,8BACd,4CAAMA,KAGVoC,aAAe,SAAAC,GACX,EAAK/B,SAAS+B,IAHd,EAAK3B,MAAO,GAFE,E,sEAQd,OACI,kBAAC,IAAM4B,SAAP,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAMnB,KAAOM,KAAKW,eAClB,kBAAC,EAAD,CAASF,QAAWT,KAAKf,a,GAbvBb,IAAMC,WCGlByC,EAAOC,SAASC,eAAe,QACrCC,IAASC,OAAO,mBANJ,WACR,OACI,kBAAC,EAAD,QAIQ,MAAWJ,I","file":"static/js/main.7456152e.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component{\n  render(){\n    return(\n      <header> <h1>RESTy</h1>  </header>\n    );\n  }\n}\nexport default Header;","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            url: '',\n            method: 'get',\n            header: {},\n            body: {},\n        };\n    }\n\n    changeHandler = event => {\n        let name = event.target.name;\n        let value = event.target.value;\n        this.setState({ [name]: value });\n    }\n\n    getData = event => {\n        event.preventDefault();\n        fetch(this.state.url, {\n            method: this.state.method,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n            .then(response => {\n                response = response.json()\n                    .then(response => {\n                        let header = { 'Content-Type': 'application/json' };\n                        let body = response;\n                        this.setState({ header, body });\n                        this.props.info({ header, body });\n                    })\n                    .catch(err => {\n                        let body = { error: err.message };\n                        let header = {};\n                        this.setState({ header, body });\n                        this.props.info({ header, body });\n                    });\n            });\n    }\n    render() {\n        return (\n            <main>\n                <section>\n                    <form onSubmit={this.getData}>\n                        <section>\n                            <input type=\"text\" className=\"url\" name=\"url\" value={this.state.url} onChange={this.changeHandler} />\n                            <div className=\"methods\">\n                                <label>\n                                    <input type=\"radio\" name=\"method\" value=\"get\" />\n                                    <span>GET</span>\n                                </label>\n                                <label>\n                                    <input type=\"radio\" name=\"method\" value=\"post\" />\n                                    <span>POST</span>\n                                </label>\n                                <label>\n                                    <input type=\"radio\" name=\"method\" value=\"put\" />\n                                    <span>PUT</span>\n                                </label>\n                                <label>\n                                    <input type=\"radio\" name=\"method\" value=\"delete\" />\n                                    <span>DELETE</span>\n                                </label>\n                                <label> <button type=\"submit\"> GO  ! </button> </label>\n                            </div>\n                        </section>\n                    </form>\n                </section>\n            </main>\n        );\n    }\n\n}\n\n\nexport default Form;","/* eslint-disable no-unused-vars */\nimport React from 'react';\n\nclass Results extends React.Component {\n    \n    resultsFun= (data) => {\n        let result = JSON.stringify(data ,null , '\\t');\n        return result ;\n      }\n      \n    \n      render() {\n        return(\n          <>\n            <span>\n                {this.resultsFun(this.props.results)} \n                </span>\n          </>\n        );\n      }\n\n\n}\n\n\nexport default Results ;\n\n","import React from 'react';\nimport Header from './components/header.js';\nimport Form from './components/form.js';\nimport Results from './components/results.js';\n\nclass App extends React.Component{\n    constructor(props){\n        super(props);\n        this.state ={};\n    }\n    handleResult = result =>{\n        this.setState(result);\n    }\n    render(){\n        return (\n            <React.Fragment>\n                <Header />\n                <Form info= {this.handleResult} />\n                <Results results = {this.state} />\n            </React.Fragment>\n        );\n    \n    }\n}\nexport default App ;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app.js';\nconst Main =() =>{\n    return(\n        <App />\n    )\n};\nconst root = document.getElementById('root');\nReactDOM.render(<Main /> , root );\n"],"sourceRoot":""}